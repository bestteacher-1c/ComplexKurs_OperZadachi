Процедура ОбработкаПроведения(Отказ, Режим)

	Если ДополнительныеСвойства.Свойство("РасчетСебестоимости") = Ложь Тогда

		#Область ОперативноеПроведение

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
			|	РеализацияТоваровИУслугТовары.Номенклатура,
			|	РеализацияТоваровИУслугТовары.Количество
			|ИЗ
			|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
			|ГДЕ
			|	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
			|	И РеализацияТоваровИУслугТовары.Номенклатура.Услуга = ЛОЖЬ";

		Запрос.УстановитьПараметр("Ссылка", Ссылка);

		РезультатЗапроса = Запрос.Выполнить();

		Выборка = РезультатЗапроса.Выбрать();

		Пока Выборка.Следующий() Цикл

			Движение = Движения.ОстаткиТоваров.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Склад = Склад;
			Движение.Количество = Выборка.Количество;

			Движение = Движения.СвободныеОстатки.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Склад = Склад;
			Движение.Количество = Выборка.Количество;

		КонецЦикла;

		//Будем анализировать увеличение позиций в документе при перепроведении
		//только в оперативном режиме
		Если Режим = РежимПроведенияДокумента.Оперативный Тогда

			МВТ = Новый МенеджерВременныхТаблиц;

			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МВТ;
			Запрос.Текст = "ВЫБРАТЬ
				|	СвободныеОстатки.Номенклатура КАК Номенклатура,
				|	СвободныеОстатки.Количество КАК Количество
				|ПОМЕСТИТЬ ВТПередЗаписью
				|ИЗ
				|	РегистрНакопления.СвободныеОстатки КАК СвободныеОстатки
				|ГДЕ
				|	СвободныеОстатки.Регистратор = &Регистратор";

			Запрос.УстановитьПараметр("Регистратор", Ссылка);

			Запрос.Выполнить();

		КонецЕсли;

		Движения.СвободныеОстатки.Записывать = Истина;
		Движения.СвободныеОстатки.БлокироватьДляИзменения = Истина;
		Движения.Записать();

		//В зависимости от режима проведения выполняем разный запрос
		//В оперативном режиме считаем остатки только у увеличенных позиций
		//в неоперативном режиме считаем остатки по всем позициям
		Запрос = Новый Запрос;

		Если Режим = РежимПроведенияДокумента.Оперативный Тогда

			Запрос.МенеджерВременныхТаблиц = МВТ;
			Запрос.Текст = "ВЫБРАТЬ
				|	СвободныеОстатки.Номенклатура КАК Номенклатура,
				|	СвободныеОстатки.Количество КАК Количество
				|ПОМЕСТИТЬ ВТОбъединение
				|ИЗ
				|	РегистрНакопления.СвободныеОстатки КАК СвободныеОстатки
				|ГДЕ
				|	СвободныеОстатки.Регистратор = &Регистратор
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ВТПередЗаписью.Номенклатура,
				|	-1 * ВТПередЗаписью.Количество
				|ИЗ
				|	ВТПередЗаписью КАК ВТПередЗаписью
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТОбъединение.Номенклатура КАК Номенклатура,
				|	СУММА(ВТОбъединение.Количество) КАК Количество
				|ПОМЕСТИТЬ ВТСписок
				|ИЗ
				|	ВТОбъединение КАК ВТОбъединение
				|
				|СГРУППИРОВАТЬ ПО
				|	ВТОбъединение.Номенклатура
				|
				|ИМЕЮЩИЕ
				|	СУММА(ВТОбъединение.Количество) > 0
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	СвободныеОстаткиОстатки.Номенклатура КАК Номенклатура,
				|	СвободныеОстаткиОстатки.КоличествоОстаток КАК КоличествоОстаток
				|ИЗ
				|	РегистрНакопления.СвободныеОстатки.Остатки(
				|			&Период,
				|			Склад = &Склад
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						ВТСписок.Номенклатура КАК Номенклатура
				|					ИЗ
				|						ВТСписок КАК ВТСписок)) КАК СвободныеОстаткиОстатки
				|ГДЕ
				|	СвободныеОстаткиОстатки.КоличествоОстаток < 0
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТПередЗаписью";

		Иначе

			Запрос.Текст = "ВЫБРАТЬ
				|	СвободныеОстатки.Номенклатура КАК Номенклатура
				|ПОМЕСТИТЬ ВТСписок
				|ИЗ
				|	РегистрНакопления.СвободныеОстатки КАК СвободныеОстатки
				|ГДЕ
				|	СвободныеОстатки.Регистратор = &Регистратор
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ОстаткиТоваровОстатки.Номенклатура КАК Номенклатура,
				|	ОстаткиТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток
				|ИЗ
				|	РегистрНакопления.СвободныеОстатки.Остатки(
				|			&Период,
				|			Склад = &Склад
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						ВТСписок.Номенклатура КАК Номенклатура
				|					ИЗ
				|						ВТСписок КАК ВТСписок)) КАК ОстаткиТоваровОстатки
				|ГДЕ
				|	ОстаткиТоваровОстатки.КоличествоОстаток < 0";

		КонецЕсли;

		Период = ?(Режим = РежимПроведенияДокумента.Оперативный, Неопределено, Новый Граница(МоментВремени(), ВидГраницы.Включая));

		Запрос.УстановитьПараметр("Период", Период);
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
		Запрос.УстановитьПараметр("Склад", Склад);

		РезультатЗапроса = Запрос.Выполнить();

		Если Режим = РежимПроведенияДокумента.Оперативный Тогда

		//Менеджер временных таблиц нам нужен только в оперативном режиме
			МВТ.Закрыть();

		КонецЕсли;

		Если РезультатЗапроса.Пустой() = Ложь Тогда

			Отказ = Истина;

			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

				Сообщить("Нет " + ВыборкаДетальныеЗаписи.Номенклатура + ". Нехватка "
					+ ВыборкаДетальныеЗаписи.КоличествоОстаток);

			КонецЦикла;

		КонецЕсли;

		Если Отказ = Истина Тогда

			Сообщить("Не проведен документ " + Ссылка);
			Возврат;

		КонецЕсли;

		Для Каждого ТекСтрокаТовары Из Товары Цикл

			Движение = Движения.Продажи.Добавить();
			Движение.Период = Дата;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
			Движение.Контрагент = Контрагент;
			Движение.Склад = Склад;
			Движение.Менеджер = Менеджер;
			Движение.Количество = ТекСтрокаТовары.Количество;
			Движение.Сумма = ТекСтрокаТовары.Сумма;
			Движение.Себестоимость = 0;

		КонецЦикла;

		Движение = Движения.Взаиморасчеты.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Сумма = Товары.Итог("Сумма");

		Движения.Взаиморасчеты.Записывать = Истина;
		Движения.ОстаткиТоваров.Записывать = Истина;
		Движения.Продажи.Записывать = Истина;
		Движения.ТоварыВРезерве.Записывать = Истина;

		#Область ПланированиеОказанияУслуг

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
			|	РеализацияТовары.Номенклатура,
			|	РеализацияТовары.Сумма,
			|	РеализацияТовары.Количество
			|ИЗ
			|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТовары
			|ГДЕ
			|	РеализацияТовары.Ссылка = &Ссылка
			|	И РеализацияТовары.Номенклатура.Услуга = ИСТИНА";

		Запрос.УстановитьПараметр("Ссылка", Ссылка);

		РезультатЗапроса = Запрос.Выполнить();

		Выборка = РезультатЗапроса.Выбрать();

		Пока Выборка.Следующий() Цикл

			Движение = Движения.ПланированиеОказаниеУслуг.Добавить();

			Движение.Период = Дата;
			Движение.Услуга = Выборка.Номенклатура;
			Движение.Контрагент = Контрагент;
			Движение.ДокументОснование = Ссылка;

		КонецЦикла;

		Движения.ПланированиеОказаниеУслуг.Записывать = Истина;

		#КонецОбласти

		#КонецОбласти

	Иначе

		#Область РасчетСебестоимости
		
		Блокировка = Новый БлокировкаДанных;

		ЧтоБлокируем = Блокировка.Добавить("РегистрНакопления.СебестоимостьТоваров");
		ЧтоБлокируем.ИсточникДанных = Товары;
		ЧтоБлокируем.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	
		ЧтоБлокируем = Блокировка.Добавить("РегистрНакопления.СебестоимостьТоваровПоПартиям");
		ЧтоБлокируем.ИсточникДанных = Товары;
		ЧтоБлокируем.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");

		Блокировка.Заблокировать();

		Движения.Продажи.Прочитать(); //Дозапишем в продажи себестоимость

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	РеализацияТоваровИУслугТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
		|	СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТТоварыДокумента
		|ИЗ
		|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
		|ГДЕ
		|	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
		|	И РеализацияТоваровИУслугТовары.Номенклатура.Услуга = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровИУслугТовары.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СебестоимостьТоваровОстатки.Номенклатура КАК Номенклатура,
		|	СебестоимостьТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	СебестоимостьТоваровОстатки.СебестоимостьОстаток КАК СебестоимостьОстаток
		|ПОМЕСТИТЬ ВТСебестоимостьОстатки
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(
		|			&Период,
		|			Номенклатура В
		|				(ВЫБРАТЬ
		|					ВТТоварыДокумента.Номенклатура
		|				ИЗ
		|					ВТТоварыДокумента КАК ВТТоварыДокумента)) КАК СебестоимостьТоваровОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТТоварыДокумента.Номенклатура КАК Номенклатура,
		|	ВТТоварыДокумента.Количество КАК Количество,
		|	ЕСТЬNULL(ВТСебестоимостьОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ВТСебестоимостьОстатки.СебестоимостьОстаток, 0) КАК СебестоимостьОстаток,
		|	ВТТоварыДокумента.Сумма КАК СуммаПродажи
		|ИЗ
		|	ВТТоварыДокумента КАК ВТТоварыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСебестоимостьОстатки КАК ВТСебестоимостьОстатки
		|		ПО ВТТоварыДокумента.Номенклатура = ВТСебестоимостьОстатки.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СебестоимостьТоваровПоПартиямОстатки.Номенклатура КАК Номенклатура,
		|	СебестоимостьТоваровПоПартиямОстатки.Партия КАК Партия,
		|	СебестоимостьТоваровПоПартиямОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	СебестоимостьТоваровПоПартиямОстатки.СебестоимостьОстаток КАК СебестоимостьОстаток
		|ПОМЕСТИТЬ ВТСебестоимостьТоваровПоПартиям
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваровПоПартиям.Остатки(
		|			&Период,
		|			Номенклатура В
		|				(ВЫБРАТЬ
		|					ВТТоварыДокумента.Номенклатура
		|				ИЗ
		|					ВТТоварыДокумента КАК ВТТоварыДокумента)) КАК СебестоимостьТоваровПоПартиямОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТТоварыДокумента.Номенклатура КАК Номенклатура,
		|	ВТТоварыДокумента.Количество КАК Количество,
		|	ЕСТЬNULL(ВТСебестоимостьТоваровПоПартиям.Партия, НЕОПРЕДЕЛЕНО) КАК Партия,
		|	ЕСТЬNULL(ВТСебестоимостьТоваровПоПартиям.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ВТСебестоимостьТоваровПоПартиям.СебестоимостьОстаток, 0) КАК СебестоимостьОстаток
		|ИЗ
		|	ВТТоварыДокумента КАК ВТТоварыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСебестоимостьТоваровПоПартиям КАК ВТСебестоимостьТоваровПоПартиям
		|		ПО ВТТоварыДокумента.Номенклатура = ВТСебестоимостьТоваровПоПартиям.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТСебестоимостьТоваровПоПартиям.Партия.МоментВремени
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	СУММА(КоличествоОстаток)
		|ПО
		|	Номенклатура";

		Запрос.УстановитьПараметр("Период", МоментВремени());
		Запрос.УстановитьПараметр("Ссылка", Ссылка);

		МассивРезультатов = Запрос.ВыполнитьПакет();

		РезультатЗапроса = МассивРезультатов[2];

		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

			Если ВыборкаДетальныеЗаписи.КоличествоОстаток = 0 Тогда

				Себестоимость = 0;

			ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоОстаток = ВыборкаДетальныеЗаписи.Количество Тогда

				Себестоимость = ВыборкаДетальныеЗаписи.СебестоимостьОстаток;

			Иначе

				Себестоимость = ВыборкаДетальныеЗаписи.СебестоимостьОстаток
					/ ВыборкаДетальныеЗаписи.КоличествоОстаток
					* ВыборкаДетальныеЗаписи.Количество;

			КонецЕсли;

			Движение = Движения.СебестоимостьТоваров.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			Движение.Количество = ВыборкаДетальныеЗаписи.Количество;
			Движение.Себестоимость = Себестоимость;
			Движение.СуммаПродажи = ВыборкаДетальныеЗаписи.СуммаПродажи;

			//Дозаписываем себестоимость
			Движение = Движения.Продажи.Добавить();
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			Движение.Контрагент = Контрагент;
			Движение.Склад = Склад;
			Движение.Менеджер = Менеджер;
			Движение.Количество = 0;
			Движение.Сумма = 0;
			Движение.Себестоимость = Себестоимость;

		КонецЦикла;

		//Партионный учет
		РезультатЗапроса = МассивРезультатов[4];

		ВыборкаИтоги = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаИтоги.Следующий() = Истина Цикл

			ОсталосьСписать = ВыборкаИтоги.Количество;

			ВыборкаДетальныеЗаписи = ВыборкаИтоги.Выбрать();

			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

				СейчасСпишем = Мин(ОсталосьСписать, ВыборкаДетальныеЗаписи.КоличествоОстаток);

				Если СейчасСпишем = 0 Тогда
					Продолжить;
				КонецЕсли;

				Если ВыборкаДетальныеЗаписи.КоличествоОстаток = 0 Тогда
					Себестоимость = 0;
				ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоОстаток = СейчасСпишем Тогда
					Себестоимость = ВыборкаДетальныеЗаписи.СебестоимостьОстаток;
				Иначе

					Себестоимость = ВыборкаДетальныеЗаписи.СебестоимостьОстаток
						/ ВыборкаДетальныеЗаписи.КоличествоОстаток * СейчасСпишем;

				КонецЕсли;

				Движение = Движения.СебестоимостьТоваровПоПартиям.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				Движение.Партия = ВыборкаДетальныеЗаписи.Партия;
				Движение.Количество = СейчасСпишем;
				Движение.Себестоимость = Себестоимость;

				ОсталосьСписать = ОсталосьСписать - СейчасСпишем;

				Если ОсталосьСписать = 0 Тогда
					Прервать;
				КонецЕсли;

			КонецЦикла;
		КонецЦикла;

		Движения.СебестоимостьТоваров.Записывать = Истина;
		Движения.СебестоимостьТоваровПоПартиям.Записывать = Истина;
		Движения.Продажи.Записывать = Истина;

		#КонецОбласти

	КонецЕсли;

КонецПроцедуры

Процедура ЗарезервироватьТовары() Экспорт

	Отказ = Ложь; //Это объявление переменной
	НачатьТранзакцию();

	Записать(РежимЗаписиДокумента.Запись);

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	РеализацияТоваровИУслугТовары.Номенклатура,
		|	РеализацияТоваровИУслугТовары.Количество
		|ИЗ
		|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
		|ГДЕ
		|	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
		|	И РеализацияТоваровИУслугТовары.Номенклатура.Услуга = ЛОЖЬ";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл

		Движение = Движения.ТоварыВРезерве.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Склад = Склад;
		Движение.Количество = Выборка.Количество;

		Движение = Движения.СвободныеОстатки.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Склад = Склад;
		Движение.Количество = Выборка.Количество;

	КонецЦикла;

	МВТ = Новый МенеджерВременныхТаблиц;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст = "ВЫБРАТЬ
		|	СвободныеОстатки.Номенклатура КАК Номенклатура,
		|	СвободныеОстатки.Количество КАК Количество
		|ПОМЕСТИТЬ ВТПередЗаписью
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки КАК СвободныеОстатки
		|ГДЕ
		|	СвободныеОстатки.Регистратор = &Регистратор";

	Запрос.УстановитьПараметр("Регистратор", Ссылка);

	Запрос.Выполнить();

	Движения.СвободныеОстатки.Записывать = Истина;
	Движения.СвободныеОстатки.БлокироватьДляИзменения = Истина;
	Движения.Записать();

	Запрос = Новый Запрос;

	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст = "ВЫБРАТЬ
		|	СвободныеОстатки.Номенклатура КАК Номенклатура,
		|	СвободныеОстатки.Количество КАК Количество
		|ПОМЕСТИТЬ ВТОбъединение
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки КАК СвободныеОстатки
		|ГДЕ
		|	СвободныеОстатки.Регистратор = &Регистратор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТПередЗаписью.Номенклатура,
		|	-1 * ВТПередЗаписью.Количество
		|ИЗ
		|	ВТПередЗаписью КАК ВТПередЗаписью
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТОбъединение.Номенклатура КАК Номенклатура,
		|	СУММА(ВТОбъединение.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТСписок
		|ИЗ
		|	ВТОбъединение КАК ВТОбъединение
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТОбъединение.Номенклатура
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВТОбъединение.Количество) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СвободныеОстаткиОстатки.Номенклатура КАК Номенклатура,
		|	СвободныеОстаткиОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки(
		|			&Период,
		|			Склад = &Склад
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						ВТСписок.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ВТСписок КАК ВТСписок)) КАК СвободныеОстаткиОстатки
		|ГДЕ
		|	СвободныеОстаткиОстатки.КоличествоОстаток < 0";

	Период = Неопределено; //Механизм резервирования не "исторический". Резервируем реальные остатки.
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Склад", Склад);

	РезультатЗапроса = Запрос.Выполнить();

	МВТ.Закрыть();

	Если РезультатЗапроса.Пустой() = Ложь Тогда

		Отказ = Истина;

		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

			Сообщить("Для установки резерва нет " + ВыборкаДетальныеЗаписи.Номенклатура
				+ ". Нехватка " + ВыборкаДетальныеЗаписи.КоличествоОстаток);

		КонецЦикла;

	КонецЕсли;

	Если Отказ = Истина Тогда

		ОтменитьТранзакцию();
		Возврат;

	Иначе

		Движения.ТоварыВРезерве.Записать();

		ЗафиксироватьТранзакцию();

	КонецЕсли;

КонецПроцедуры
