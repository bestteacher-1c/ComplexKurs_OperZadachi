Процедура ОбработкаПроведения(Отказ, Режим)

	Если ДополнительныеСвойства.Свойство("РасчетСебестоимости") = Ложь Тогда

		#Область ОперативноеПроведение

//		Запрос = Новый Запрос;
//		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
//			|	РеализацияТовары.Номенклатура КАК Номенклатура,
//			|	РеализацияТовары.Количество КАК Количество
//			|ИЗ
//			|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТовары
//			|ГДЕ
//			|	РеализацияТовары.Ссылка = &Ссылка
//			|	И РеализацияТовары.Номенклатура.Услуга = ЛОЖЬ";
//
//		Запрос.УстановитьПараметр("Ссылка", Ссылка);
//
//		РезультатЗапроса = Запрос.Выполнить();
//
//		Выборка = РезультатЗапроса.Выбрать();
//
//		Пока (Выборка.Следующий() = Истина) Цикл
//
//			Движение = Движения.СвободныеОстатки.Добавить();
//			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
//			Движение.Период = Дата;
//			Движение.Номенклатура = Выборка.Номенклатура;
//			Движение.Склад = Склад;
//			Движение.Количество = Выборка.Количество;
//
//		КонецЦикла;

		#КонецОбласти

		#Область ПланированиеОказанияУслуг

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
			|	РеализацияТовары.Номенклатура,
			|	РеализацияТовары.Сумма,
			|	РеализацияТовары.Количество
			|ИЗ
			|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТовары
			|ГДЕ
			|	РеализацияТовары.Ссылка = &Ссылка
			|	И РеализацияТовары.Номенклатура.Услуга = ИСТИНА";

		Запрос.УстановитьПараметр("Ссылка", Ссылка);

		РезультатЗапроса = Запрос.Выполнить();

		Выборка = РезультатЗапроса.Выбрать();

		Пока Выборка.Следующий() Цикл

			Движение = Движения.ПланированиеОказаниеУслуг.Добавить();

			Движение.Период = Дата;
			Движение.Услуга = Выборка.Номенклатура;
			Движение.Контрагент = Контрагент;
			Движение.ДокументОснование = Ссылка;

		КонецЦикла;

		Движения.ПланированиеОказаниеУслуг.Записывать = Истина;

		#КонецОбласти

		#Область ЗаписьВДругиеОперативныеРегистры

		Для Каждого ТекСтрокаТовары Из Товары Цикл

			Движение = Движения.Продажи.Добавить();
			Движение.Период = Дата;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
			Движение.Контрагент = Контрагент;
			Движение.Склад = Склад;
			Движение.Менеджер = Менеджер;
			Движение.Количество = ТекСтрокаТовары.Количество;
			Движение.Сумма = ТекСтрокаТовары.Сумма;
			Движение.Себестоимость = 0; //Будет расчитано потом регламентным заданием
		КонецЦикла;

		Движение = Движения.Взаиморасчеты.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Сумма = Товары.Итог("Сумма");

		Движения.Взаиморасчеты.Записывать = Истина;
		Движения.Продажи.Записывать = Истина;
		#КонецОбласти

	Иначе

		#Область РасчетСебестоимости

		#Область УправляемыеБлокировки

		Блокировка = Новый БлокировкаДанных;

		//				ЧтоБлокируем = Блокировка.Добавить("РегистрНакопления.ОстаткиТоваров");
		//				ЧтоБлокируем.ИсточникДанных = Товары;
		//				ЧтоБлокируем.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
		ЧтоБлокируем = Блокировка.Добавить("РегистрНакопления.СебестоимостьТоваров");
		ЧтоБлокируем.ИсточникДанных = Товары;
		ЧтоБлокируем.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");

		ЧтоБлокируем = Блокировка.Добавить("РегистрНакопления.СебестоимостьТоваровПоПартиям");
		ЧтоБлокируем.ИсточникДанных = Товары;
		ЧтоБлокируем.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");

		//				ЧтоБлокируем = Блокировка.Добавить("РегистрНакопления.ТоварыВРезерве");
		//				ЧтоБлокируем.ИсточникДанных = Товары;
		//				ЧтоБлокируем.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
		Блокировка.Заблокировать();

		#КонецОбласти //УправляемыеБлокировки


		#Область ЗаписьПустогоНабораЗаписей

		//Движения.ТоварыВРезерве.Записывать = Истина;
		Если ДополнительныеСвойства.ЗаписатьПустойНабор Тогда

		//	Движения.ОстаткиТоваров.Записывать = Истина;
			Движения.СебестоимостьТоваров.Записывать = Истина;
			Движения.СебестоимостьТоваровПоПартиям.Записывать = Истина;
			Движения.Записать();

		КонецЕсли;

		#КонецОбласти //ЗаписьПустогоНабораЗаписей	
		Движения.Продажи.Прочитать();

		#Область Запрос

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	РеализацияТовары.Номенклатура КАК Номенклатура,
			|	СУММА(РеализацияТовары.Количество) КАК Количество
			|ПОМЕСТИТЬ ВТТоварыДокумента
			|ИЗ
			|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТовары
			|ГДЕ
			|	РеализацияТовары.Ссылка = &Ссылка
			|	И РеализацияТовары.Номенклатура.Услуга = ЛОЖЬ
			|СГРУППИРОВАТЬ ПО
			|	РеализацияТовары.Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СебестоимостьТоваровОстатки.Номенклатура,
			|	СебестоимостьТоваровОстатки.СебестоимостьОстаток,
			|	СебестоимостьТоваровОстатки.КоличествоОстаток
			|ПОМЕСТИТЬ ВТСебестоимостьТоваров
			|ИЗ
			|	РегистрНакопления.СебестоимостьТоваров.Остатки(&Период, Номенклатура В
			|		(ВЫБРАТЬ
			|			ВТТоварыДокумента.Номенклатура
			|		ИЗ
			|			ВТТоварыДокумента КАК ВТТоварыДокумента)) КАК СебестоимостьТоваровОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТТоварыДокумента.Номенклатура КАК Номенклатура,
			|	ВТТоварыДокумента.Количество КАК Количество,
			|	ЕСТЬNULL(ВТСебестоимостьТоваров.КоличествоОстаток, 0) КАК КоличествоОстатокСебестоимость,
			|	ЕСТЬNULL(ВТСебестоимостьТоваров.СебестоимостьОстаток, 0) КАК СебестоимостьОстатокСебестоимость
			|ИЗ
			|	ВТТоварыДокумента КАК ВТТоварыДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСебестоимостьТоваров КАК ВТСебестоимостьТоваров
			|		ПО ВТТоварыДокумента.Номенклатура = ВТСебестоимостьТоваров.Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОстаткиТоваровПоПартиямОстатки.Номенклатура КАК Номенклатура,
			|	ОстаткиТоваровПоПартиямОстатки.КоличествоОстаток КАК КоличествоОстаток,
			|	ОстаткиТоваровПоПартиямОстатки.СебестоимостьОстаток КАК СебестоимостьОстаток,
			|	ОстаткиТоваровПоПартиямОстатки.Партия
			|ПОМЕСТИТЬ ВТСебестоимостьТоваровПоПартиям
			|ИЗ
			|	РегистрНакопления.СебестоимостьТоваровПоПартиям.Остатки(&Период, Номенклатура В
			|		(ВЫБРАТЬ
			|			ВТТоварыДокумента.Номенклатура
			|		ИЗ
			|			ВТТоварыДокумента КАК ВТТоварыДокумента)) КАК ОстаткиТоваровПоПартиямОстатки
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТТоварыДокумента.Номенклатура КАК Номенклатура,
			|	ВТТоварыДокумента.Количество КАК Количество,
			|	ЕСТЬNULL(ВТСебестоимостьТоваровПоПартиям.КоличествоОстаток, 0) КАК КоличествоОстатокСебестоимость,
			|	ЕСТЬNULL(ВТСебестоимостьТоваровПоПартиям.СебестоимостьОстаток, 0) КАК СебестоимостьОстатокСебестоимость,
			|	ЕСТЬNULL(ВТСебестоимостьТоваровПоПартиям.Партия, 0) КАК Партия
			|ИЗ
			|	ВТТоварыДокумента КАК ВТТоварыДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСебестоимостьТоваровПоПартиям КАК ВТСебестоимостьТоваровПоПартиям
			|		ПО ВТТоварыДокумента.Номенклатура = ВТСебестоимостьТоваровПоПартиям.Номенклатура
			|УПОРЯДОЧИТЬ ПО
			|	ВТСебестоимостьТоваровПоПартиям.Партия.МоментВремени
			|ИТОГИ
			|	Максимум(Количество)
			|ПО
			|	Номенклатура";

		Если Константы.МетодСписания.Получить() = Перечисления.МетодыСписанияСебестоимости.ЛИФО Тогда

			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТСебестоимостьТоваровПоПартиям.Партия.МоментВремени ВОЗР", "ВТСебестоимостьТоваровПоПартиям.Партия.МоментВремени УБЫВ");

		КонецЕсли;

		Запрос.УстановитьПараметр("Период", МоментВремени());
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		//				Запрос.УстановитьПараметр("Склад", Склад);

		#КонецОбласти //Запрос
		МассивРезультатов = Запрос.ВыполнитьПакет();

		#Область СебестоимостьПоСредней

		РезультатЗапроса = МассивРезультатов.Получить(2);

		Выборка = РезультатЗапроса.Выбрать();

		Пока Выборка.Следующий() Цикл

			Движение = Движения.СебестоимостьТоваров.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Количество = Выборка.Количество;

			Если Выборка.КоличествоОстатокСебестоимость = 0 Тогда
				Себестоимость = 0;
			ИначеЕсли Выборка.КоличествоОстатокСебестоимость = Выборка.Количество Тогда
				Себестоимость = Выборка.СебестоимостьОстатокСебестоимость;
			Иначе
				Себестоимость = Выборка.Количество
					* (Выборка.СебестоимостьОстатокСебестоимость
					/ Выборка.КоличествоОстатокСебестоимость);
			КонецЕсли;

			Движение.Себестоимость = Себестоимость;

			//Заполняем набор записей по регистру Продажи
			Движение = Движения.Продажи.Добавить();
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Контрагент = Контрагент;
			Движение.Склад = Склад;
			Движение.Менеджер = Менеджер;
			Движение.Количество = 0;
			Движение.Сумма = 0;
			Движение.Себестоимость = Себестоимость; //Расчет себестоимости регламентным заданием
		КонецЦикла;
		#КонецОбласти //СебестоимостьПоСредней

		#Область ПартионныйУчет

		РезультатЗапроса = МассивРезультатов[4];

		ВыборкаИтоги = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаИтоги.Следующий() Цикл

			ОсталосьСписать = ВыборкаИтоги.Количество;

			ВыборкаДетальныеЗаписи = ВыборкаИтоги.Выбрать();

			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

				СейчасСпишем = Мин(ОсталосьСписать, ВыборкаДетальныеЗаписи.КоличествоОстатокСебестоимость);

				Движение = Движения.СебестоимостьТоваровПоПартиям.Добавить();

				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;

				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;

				Движение.Партия = ВыборкаДетальныеЗаписи.Партия;

				Движение.Количество = СейчасСпишем;

				Если СейчасСпишем = 0 Тогда
					Себестоимость = 0;
				ИначеЕсли СейчасСпишем = ВыборкаДетальныеЗаписи.КоличествоОстатокСебестоимость Тогда
					Себестоимость = ВыборкаДетальныеЗаписи.СебестоимостьОстатокСебестоимость;
				Иначе
					Себестоимость = СейчасСпишем
						* (ВыборкаДетальныеЗаписи.СебестоимостьОстатокСебестоимость
						/ ВыборкаДетальныеЗаписи.КоличествоОстатокСебестоимость);
				КонецЕсли;

				Движение.Себестоимость = Себестоимость;

				ОсталосьСписать = ОсталосьСписать - СейчасСпишем;

				Если ОсталосьСписать = 0 Тогда

					Прервать;

				КонецЕсли;

			КонецЦикла;

		КонецЦикла;
		#КонецОбласти //ПартионныйУчет

		//Если Отказ = Истина Тогда
		//	Возврат;
		//КонецЕсли;

		#Область ПризнакЗаписыватьУНаборовЗаписей

		Движения.СебестоимостьТоваров.Записывать = Истина;
		Движения.СебестоимостьТоваровПоПартиям.Записывать = Истина;
		Движения.Продажи.Записывать = Истина;

		#КонецОбласти

		#КонецОбласти //РасчетСебестоимости
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	ДополнительныеСвойства.Вставить("ЗаписатьПустойНабор", Ложь);

	Если ЭтоНовый() = Ложь Тогда

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
			|	РеализацияТоваровИУслуг.Дата
			|ИЗ
			|	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
			|ГДЕ
			|	РеализацияТоваровИУслуг.Ссылка = &Ссылка";

		Запрос.УстановитьПараметр("Ссылка", Ссылка);

		РезультатЗапроса = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

			ДополнительныеСвойства.Вставить("ДатаДоПерезаписи", ВыборкаДетальныеЗаписи.Дата);

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ДополнительныеСвойства.Свойство("ДатаДоПерезаписи") Тогда

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
			|	РеализацияТоваровИУслуг.Дата
			|ИЗ
			|	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
			|ГДЕ
			|	РеализацияТоваровИУслуг.Ссылка = &Ссылка";

		Запрос.УстановитьПараметр("Ссылка", Ссылка);

		РезультатЗапроса = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

			Если ВыборкаДетальныеЗаписи.Дата > ДополнительныеСвойства.ДатаДоПерезаписи Тогда

				ДополнительныеСвойства.Вставить("ЗаписатьПустойНабор", Истина);

			КонецЕсли;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Процедура ЗарезервироватьТовары() Экспорт

	Отказ = Ложь;
	НачатьТранзакцию();

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	РеализацияТовары.Номенклатура,
		|	СУММА(РеализацияТовары.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТТоварыДокумента
		|ИЗ
		|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТовары
		|ГДЕ
		|	РеализацияТовары.Ссылка = &Ссылка
		|	И РеализацияТовары.Номенклатура.Услуга = ЛОЖЬ
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТовары.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОстаткиТоваровОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ПОМЕСТИТЬ ВТОстаткиТоваров
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Остатки(&Период, Номенклатура В
		|		(ВЫБРАТЬ
		|			ВТТоварыДокумента.Номенклатура
		|		ИЗ
		|			ВТТоварыДокумента КАК ВТТоварыДокумента)) КАК ОстаткиТоваровОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыВРезервеОстатки.Номенклатура,
		|	ТоварыВРезервеОстатки.КоличествоОстаток
		|ПОМЕСТИТЬ ВТТоварыВРезервеОстатки
		|ИЗ
		|	РегистрНакопления.ТоварыВРезерве.Остатки(&Период, Номенклатура В
		|		(ВЫБРАТЬ
		|			ВТТоварыДокумента.Номенклатура
		|		ИЗ
		|			ВТТоварыДокумента КАК ВТТоварыДокумента)
		|	И Склад = &Склад) КАК ТоварыВРезервеОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТТоварыДокумента.Номенклатура КАК Номенклатура,
		|	ВТТоварыДокумента.Количество КАК Количество,
		|	ЕСТЬNULL(ВТОстаткиТоваров.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ВТТоварыВРезервеОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокРезерв
		|ИЗ
		|	ВТТоварыДокумента КАК ВТТоварыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиТоваров КАК ВТОстаткиТоваров
		|		ПО ВТТоварыДокумента.Номенклатура = ВТОстаткиТоваров.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТоварыВРезервеОстатки КАК ВТТоварыВРезервеОстатки
		|		ПО ВТТоварыДокумента.Номенклатура = ВТТоварыВРезервеОстатки.Номенклатура";

	Запрос.УстановитьПараметр("Период", МоментВремени());
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл

		Нехватка = Выборка.Количество - Выборка.КоличествоОстаток
			+ Выборка.КоличествоОстатокРезерв;

		Если Нехватка > 0 Тогда

			Отказ = Истина;

			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не хватает в свободном остатке товара "
				+ Выборка.Номенклатура + ". Нехватка " + Нехватка
				+ ". Резервирование невозможно!";
			Сообщение.Сообщить();

		КонецЕсли;

		Если Отказ = Ложь Тогда

			Движение = Движения.ТоварыВРезерве.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Склад = Склад;
			Движение.Количество = Выборка.Количество;

			Движение = Движения.СвободныеОстатки.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Склад = Склад;
			Движение.Количество = Выборка.Количество;

		КонецЕсли;

	КонецЦикла;

	Если Отказ = Истина Тогда

		ОтменитьТранзакцию();
	Иначе

		Движения.ТоварыВРезерве.Записать();
		Движения.СвободныеОстатки.Записать();
		ЗафиксироватьТранзакцию();

	КонецЕсли;

	//Движения.ТоварыВРезерве.Записывать = Истина;
	//Для Каждого ТекСтрокаТовары Из Товары Цикл
	//	Движение = Движения.ТоварыВРезерве.Добавить();
	//	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	//	Движение.Период = Дата;
	//	Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
	//	Движение.Склад = Склад;
	//	Движение.Количество = ТекСтрокаТовары.Количество;
	//КонецЦикла;
	//
КонецПроцедуры
